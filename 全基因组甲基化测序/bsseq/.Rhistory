knitr::opts_chunk$set(echo = TRUE)
library(bsseq)
library(bsseqData)
data(BS.cancer.ex)
BS.cancer.ex <- updateObject(BS.cancer.ex)
BS.cancer.ex
pData(BS.cancer.ex)
BS.cancer.ex.fit <- BSmooth(
BSseq = BS.cancer.ex,
# BPPARAM = MulticoreParam(workers = 1),
verbose = TRUE)
data(BS.cancer.ex.fit)
BS.cancer.ex.fit <- updateObject(BS.cancer.ex.fit)
BS.cancer.ex.fit
## The average coverage of CpGs on the two chromosomes
round(colMeans(getCoverage(BS.cancer.ex)), 1)
## Number of CpGs in two chromosomes
length(BS.cancer.ex)
## Number of CpGs which are covered by at least 1 read in all 6 samples
sum(rowSums(getCoverage(BS.cancer.ex) >= 1) == 6)
## Number of CpGs with 0 coverage in all samples
sum(rowSums(getCoverage(BS.cancer.ex)) == 0)
logp <- ppois(0, lambda = 4, lower.tail = FALSE, log.p = TRUE)
round(1 - exp(6 * logp), 3)
## Split datag
BS1 <- BS.cancer.ex[, 1]
save(BS1, file = "BS1.rda")
BS2 <- BS.cancer.ex[, 2]
save(BS1, file = "BS1.rda")
## done splitting
## Do the following on each node
## node 1
load("BS1.rda")
BS1.fit <- BSmooth(BS1)
save(BS1.fit)
## Split datag
BS1 <- BS.cancer.ex[, 1]
save(BS1, file = "BS1.rda")
BS2 <- BS.cancer.ex[, 2]
save(BS2, file = "BS2.rda")
## done splitting
## Do the following on each node
## node 1
load("BS1.rda")
BS1.fit <- BSmooth(BS1)
save(BS1.fit, file = "BS1.fit.rda")
## done node 1
## node 2
load("BS2.rda")
BS2.fit <- BSmooth(BS2)
save(BS2.fit, file = "BS2.fit.rda")
## done node 2
## join; in a new R session
load("BS1.fit.rda")
load("BS2.fit.rda")
BS.fit <- combine(BS1.fit, BS2.fit)
load("BS1.fit.rda")
load("BS2.fit.rda")
BS.fit <- combine(BS1.fit, BS2.fit)
## Split datag
BS1 <- BS.cancer.ex[, 1]
save(BS1, file = "BS1.rda")
BS2 <- BS.cancer.ex[, 2]
save(BS2, file = "BS2.rda")
## done splitting
## Do the following on each node
## node 1
load("BS1.rda")
BS1.fit <- BSmooth(BS1)
BS.cov <- getCoverage(BS.cancer.ex.fit)
keepLoci.ex <- which(rowSums(BS.cov[, BS.cancer.ex$Type == "cancer"] >= 2) >= 2 &
rowSums(BS.cov[, BS.cancer.ex$Type == "normal"] >= 2) >= 2)
length(keepLoci.ex)
BS.cancer.ex.fit <- BS.cancer.ex.fit[keepLoci.ex,]
BS.cancer.ex.tstat <- BSmooth.tstat(BS.cancer.ex.fit,
group1 = c("C1", "C2", "C3"),
group2 = c("N1", "N2", "N3"),
estimate.var = "group2",
local.correct = TRUE,
verbose = TRUE)
BS.cancer.ex.tstat
knitr::opts_chunk$set(echo = TRUE)
data(BS.chr22)
BS.chr22
head(granges(BS.chr22), n = 4)
head(getCoverage(BS.chr22, type = "M"), n = 4)
head(getCoverage(BS.chr22), n = 4)
head(start(BS.chr22), n = 4)
## [1] 14430632 14430677 14430687 14430702
head(seqnames(BS.chr22), n = 4)
## factor-Rle of length 4 with 1 run
##   Lengths:     4
##   Values : chr22
## Levels(1): chr22
sampleNames(BS.chr22)
## [1] "r1" "r2"
pData(BS.chr22)
## DataFrame with 2 rows and 1 column
##            Rep
##    <character>
## r1  replicate1
## r2  replicate2
dim(BS.chr22)
## [1] 494728      2
BS.chr22[1:6,1]
## An object of type 'BSseq' with
##   6 methylation loci
##   1 samples
## has not been smoothed
## All assays are in-memory
subsetByOverlaps(BS.chr22,
GRanges(seqnames = "chr22",
ranges = IRanges(start = 1, end = 2*10^7)))
## An object of type 'BSseq' with
##   67082 methylation loci
##   2 samples
## has not been smoothed
## All assays are in-memory
